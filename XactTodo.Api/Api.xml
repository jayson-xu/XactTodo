<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XactTodo.Api</name>
    </assembly>
    <members>
        <member name="T:XactTodo.Api.Authentication.BearerDefaults">
            <summary>
            身份验证相关的一些默认值
            </summary>
        </member>
        <member name="F:XactTodo.Api.Authentication.BearerDefaults.AuthenticationScheme">
            <summary>
            AuthenticationScheme 选项默认值
            </summary>
        </member>
        <member name="M:XactTodo.Api.Controllers.MatterController.GetImportances">
            <summary>
            获取重要性列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:XactTodo.Api.Controllers.MatterController.GetTimeUnits">
            <summary>
            获取时间单位列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:XactTodo.Api.Controllers.MatterController.GetProgressStatuses">
            <summary>
            获取进展情况集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:XactTodo.Api.Controllers.MatterController.GetUnfinishedMatters(System.String)">
            <summary>
            获取未完成的事项
            </summary>
            <param name="excludedTeamsId">排除指定小组(例如私密)</param>
            <returns></returns>
        </member>
        <member name="M:XactTodo.Api.Controllers.MatterController.GetById(System.Int32)">
            <summary>
            获取指定事项
            </summary>
            <param name="id">事项Id</param>
            <returns></returns>
        </member>
        <member name="M:XactTodo.Api.Controllers.MatterController.GetAll(System.String,System.Nullable{XactTodo.Domain.AggregatesModel.MatterAggregate.ProgressStatus},System.Int32,System.Int32,System.String)">
            <summary>
            获取全部事项
            </summary>
            <param name="search"></param>
            <param name="status"></param>
            <param name="page"></param>
            <param name="limit"></param>
            <param name="sortOrder"></param>
            <returns></returns>
        </member>
        <member name="M:XactTodo.Api.Controllers.MatterController.Create(XactTodo.Api.DTO.MatterInput)">
            <summary>
            创建新事项
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:XactTodo.Api.Controllers.MatterController.Update(System.Int32,XactTodo.Api.DTO.MatterInput)">
            <summary>
            更新事项
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:XactTodo.Api.Controllers.MatterController.Delete(System.Int32)">
            <summary>
            删除事项
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:XactTodo.Api.Controllers.MatterController.UpdateProgressStatus(System.Int32,XactTodo.Api.DTO.ProgressUpdateAsk)">
            <summary>
            更新事项进展状况
            </summary>
        </member>
        <member name="M:XactTodo.Api.Controllers.TeamController.GetJoinedTeams">
            <summary>
            获取当前用户加入的所有小组
            </summary>
            <returns></returns>
        </member>
        <member name="M:XactTodo.Api.Controllers.TeamController.GetManagedTeams">
            <summary>
            获取当前用户有管理权的小组
            </summary>
            <returns></returns>
        </member>
        <member name="M:XactTodo.Api.Controllers.TeamController.Create(XactTodo.Api.DTO.TeamInput)">
            <summary>
            创建新小组
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:XactTodo.Api.Controllers.TeamController.Update(System.Int32,XactTodo.Api.DTO.TeamInput)">
            <summary>
            更新小组
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:XactTodo.Api.Controllers.TeamController.Delete(System.Int32)">
            <summary>
            删除小组
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:XactTodo.Api.DTO.LoginResult">
            <summary>
            登录结果
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.LoginResult.ResultType">
            <summary>
            结果类型<see cref="T:XactTodo.Api.DTO.LoginResultType"/> 
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.LoginResult.ErrorMessage">
            <summary>
            登录或验证失败时，可通过此属性向前台反馈更明确的错误信息
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.LoginResult.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.LoginResult.Username">
            <summary>
            用户账号
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.LoginResult.Nickname">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.LoginResult.Token">
            <summary>
            令牌
            </summary>
        </member>
        <member name="M:XactTodo.Api.DTO.LoginResult.#ctor">
            <summary>
            无参构造函数
            </summary>
        </member>
        <member name="M:XactTodo.Api.DTO.LoginResult.#ctor(XactTodo.Api.DTO.LoginResultType,System.String)">
            <summary>
            以指定登录结果类型构造实例
            </summary>
            <param name="resultType">登录结果类型</param>
            <param name="errorMessage">详细错误信息</param>
        </member>
        <member name="T:XactTodo.Api.DTO.LoginResultType">
            <summary>
            登录结果类型
            </summary>
        </member>
        <member name="F:XactTodo.Api.DTO.LoginResultType.Success">
            <summary>
            登录成功
            </summary>
        </member>
        <member name="F:XactTodo.Api.DTO.LoginResultType.InvalidUserName">
            <summary>
            错误的用户名
            </summary>
        </member>
        <member name="F:XactTodo.Api.DTO.LoginResultType.InvalidPassword">
            <summary>
            密码错误
            </summary>
        </member>
        <member name="F:XactTodo.Api.DTO.LoginResultType.PasswordMustReset">
            <summary>
            必须重设密码
            </summary>
        </member>
        <member name="F:XactTodo.Api.DTO.LoginResultType.UserIsNotActive">
            <summary>
            账号未激活
            </summary>
        </member>
        <member name="F:XactTodo.Api.DTO.LoginResultType.UserEmailIsNotConfirmed">
            <summary>
            用户邮件地址未验证，只能使用账号登录
            </summary>
        </member>
        <member name="F:XactTodo.Api.DTO.LoginResultType.UnkownError">
            <summary>
            未知错误
            </summary>
        </member>
        <member name="T:XactTodo.Api.DTO.MatterInput">
            <summary>
            事项
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.MatterInput.Id">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.MatterInput.Subject">
            <summary>
            主题
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.MatterInput.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.MatterInput.Tags">
            <summary>
            Tags
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.MatterInput.ExecutantId">
            <summary>
            负责人Id
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.MatterInput.CameFrom">
            <summary>
            事项来源
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.MatterInput.Password">
            <summary>
            密码
            </summary>
            <remarks>如果设定了此密码，则在查看或编辑事项详情时必须先核对密码，事项创建人可重置此密码</remarks>
        </member>
        <member name="P:XactTodo.Api.DTO.MatterInput.RelatedMatterId">
            <summary>
            关联事项
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.MatterInput.Importance">
            <summary>
            重要性
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.MatterInput.EstimatedTimeRequired_Num">
            <summary>
            预计需时(数值)
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.MatterInput.EstimatedTimeRequired_Unit">
            <summary>
            预计需时(单位)
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.MatterInput.Deadline">
            <summary>
            最后期限
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.MatterInput.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.MatterInput.FinishTime">
            <summary>
            完成时间
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.MatterInput.Periodic">
            <summary>
            周期性事项
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.MatterInput.IntervalPeriod_Num">
            <summary>
            间隔周期(数值)
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.MatterInput.IntervalPeriod_Unit">
            <summary>
            间隔周期(单位)
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.MatterInput.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.MatterInput.TeamId">
            <summary>
            所属小组，此属性值为null时表示归属个人
            </summary>
        </member>
        <member name="T:XactTodo.Api.DTO.ProgressUpdateAsk">
            <summary>
            更新事项进展状况的请求
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.ProgressUpdateAsk.NewStatus">
            <summary>
            最新进展状况<seealso cref="T:XactTodo.Domain.AggregatesModel.MatterAggregate.ProgressStatus"/>
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.ProgressUpdateAsk.Comment">
            <summary>
            进展说明
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.ProgressUpdateAsk.StartTime">
            <summary>
            事项开始时间
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.ProgressUpdateAsk.FinishTime">
            <summary>
            事项完成时间
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.TeamInput.Id">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.TeamInput.Name">
            <summary>
            小组名称(同一用户创建的小组，名称不得重复)
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.TeamInput.ProposedTags">
            <summary>
            组内提议使用的Tags(多个Tag之间以;号分隔)
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.UserInput.Username">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:XactTodo.Api.DTO.UserInput.Password">
            <summary>
            登录密码
            </summary>
        </member>
        <member name="T:XactTodo.Api.Filters.HttpGlobalExceptionFilter">
            <summary>
            全局异常捕获及处理
            </summary>
        </member>
        <member name="M:XactTodo.Api.Filters.HttpGlobalExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            截获异常
            </summary>
            <param name="context">异常上下文</param>
        </member>
        <member name="T:XactTodo.Api.Filters.HttpGlobalExceptionFilter.InternalServerErrorObjectResult">
            <summary>
            表示发生服务器内部异常的结果类
            </summary>
        </member>
        <member name="M:XactTodo.Api.Filters.HttpGlobalExceptionFilter.InternalServerErrorObjectResult.#ctor(System.Object)">
            <summary>
            构造函数
            </summary>
            <param name="value">包含异常内容的对象</param>
        </member>
        <member name="T:XactTodo.Api.Queries.IMatterQueries">
            <summary>
            事项查询接口
            </summary>
        </member>
        <member name="T:XactTodo.Api.Queries.IQueries">
            <summary>
            所有表示查询接口都应该从此接口派生
            </summary>
        </member>
        <member name="T:XactTodo.Api.Queries.ITeamQueries">
            <summary>
            小组查询接口
            </summary>
        </member>
        <member name="M:XactTodo.Api.Queries.ITeamQueries.GetAsync(System.Int32)">
            <summary>
            获取指定Id的小组
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:XactTodo.Api.Queries.ITeamQueries.GetJoinedTeamsAsync(System.Int32,System.Boolean)">
            <summary>
            获取指定用户加入的全部小组
            </summary>
            <param name="userId"></param>
            <param name="incCreatedTeams">包含指定用户所创建的小组</param>
            <returns></returns>
        </member>
        <member name="M:XactTodo.Api.Queries.ITeamQueries.GetManagedTeamsAsync(System.Int32)">
            <summary>
            获取指定用户管理的全部小组
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:XactTodo.Api.Queries.ITeamQueries.GetMembersAsync(System.Int32)">
            <summary>
            获取指定小组内全部成员
            </summary>
            <param name="teamId"></param>
            <returns></returns>
        </member>
        <member name="M:XactTodo.Api.Queries.MatterQueries.GetMattersAsync(System.String,System.Nullable{XactTodo.Domain.AggregatesModel.MatterAggregate.ProgressStatus},System.Int32,System.Int32,System.String)">
            <summary>
            查询全部事项
            </summary>
            <param name="search">搜索关键字</param>
            <param name="status">进展情况</param>
            <param name="page">第几页，从1开始</param>
            <param name="limit">每页限定行数</param>
            <param name="sortOrder">排序字段，格式如：column1[, column2 [DESC]]</param>
            <returns></returns>
        </member>
        <member name="T:XactTodo.Api.Queries.Matter">
            <summary>
            事项
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.Matter.Id">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.Matter.Subject">
            <summary>
            主题
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.Matter.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.Matter.Executant">
            <summary>
            负责人Id
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.Matter.CameFrom">
            <summary>
            事项来源
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.Matter.Importance">
            <summary>
            重要性
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.Matter.EstimatedTimeRequired_Num">
            <summary>
            预计需时 数量
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.Matter.EstimatedTimeRequired_Unit">
            <summary>
            预计需时 单位(枚举)
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.Matter.EstimatedTimeRequiredDescr">
            <summary>
            预计需时描述
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.Matter.Deadline">
            <summary>
            最后期限
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.Matter.Finished">
            <summary>
            已完成
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.Matter.FinishTime">
            <summary>
            完成时间
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.Matter.Periodic">
            <summary>
            周期性事项
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.Matter.IntervalPeriod_Num">
            <summary>
            间隔周期 数量
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.Matter.IntervalPeriod_Unit">
            <summary>
            间隔周期 单位(枚举)
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.Matter.IntervalPeriodDescr">
            <summary>
            间隔周期描述
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.Matter.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.Matter.TeamId">
            <summary>
            所属小组，此属性值为null时表示归属个人
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.Matter.TeamName">
            <summary>
            所属小组
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.Matter.CreatorName">
            <summary>
            创建者名字
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.Matter.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:XactTodo.Api.Queries.MatterOutline">
            <summary>
            事项概略
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.MatterOutline.Id">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.MatterOutline.Subject">
            <summary>
            主题
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.MatterOutline.Content">
            <summary>
            具体内容
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.MatterOutline.Importance">
            <summary>
            重要性
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.MatterOutline.Status">
            <summary>
            进展情况
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.MatterOutline.ProgressStatus">
            <summary>
            进展情况描述
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.MatterOutline.Deadline">
            <summary>
            最后期限
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.MatterOutline.FinishTime">
            <summary>
            完成时间
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.MatterOutline.TeamName">
            <summary>
            所属小组
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.MatterOutline.CreatorName">
            <summary>
            创建者名字
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.MatterOutline.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:XactTodo.Api.Queries.UnfinishedMatterOutline">
            <summary>
            未完成事项概略
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.UnfinishedMatterOutline.Id">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.UnfinishedMatterOutline.Subject">
            <summary>
            主题
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.UnfinishedMatterOutline.Importance">
            <summary>
            重要性
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.UnfinishedMatterOutline.Deadline">
            <summary>
            最后期限
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.UnfinishedMatterOutline.TeamName">
            <summary>
            所属小组
            </summary>
        </member>
        <member name="T:XactTodo.Api.Queries.PaginatedData`1">
            <summary>
            分页数据
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:XactTodo.Api.Queries.PaginatedData`1.PageIndex">
            <summary>
            第几页，从1开始
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.PaginatedData`1.TotalPages">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.PaginatedData`1.Total">
            <summary>
            记录总数
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.PaginatedData`1.Rows">
            <summary>
            本次返回的数据行
            </summary>
        </member>
        <member name="M:XactTodo.Api.Queries.PaginatedData`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32,System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="items">数据行</param>
            <param name="count">记录总数</param>
            <param name="pageIndex">第几页，从1开始</param>
            <param name="pageSize">每页记录数</param>
        </member>
        <member name="P:XactTodo.Api.Queries.PaginatedData`1.HasPreviousPage">
            <summary>
            是否有上页
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.PaginatedData`1.HasNextPage">
            <summary>
            是否有下页
            </summary>
        </member>
        <member name="M:XactTodo.Api.Queries.PaginatedData`1.ExecuteAsync(System.Linq.IQueryable{`0},System.Int32,System.Int32)">
            <summary>
            执行查询并返回指定页的数据
            </summary>
            <param name="query">查询</param>
            <param name="pageIndex">第几页，从1开始</param>
            <param name="pageSize">每页数据行</param>
            <returns></returns>
        </member>
        <member name="M:XactTodo.Api.Queries.PaginatedData`1.ExecuteAsync(System.Data.IDbConnection,System.String,System.Object,System.String,System.Int32,System.Int32,System.Data.IDbTransaction)">
            <summary>
            异步执行分页查询
            </summary>
            <param name="connection">数据库连接</param>
            <param name="selectScript">SELECT脚本，可包含<code>WHERE</code>但不能包含<code>ORDER BY子句</code></param>
            <param name="param">查询参数对象</param>
            <param name="orderBy">排序字段，格式如：column1[, column2 [DESC]]</param>
            <param name="pageIndex">第几页，从1开始</param>
            <param name="pageSize">每页记录数</param>
            <param name="transaction">数据库事务对象</param>
            <returns></returns>
        </member>
        <member name="P:XactTodo.Api.Queries.TeamOutline.Id">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.TeamOutline.Name">
            <summary>
            小组名称
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.TeamOutline.ProposedTags">
            <summary>
            组内提议使用的Tags
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.Team.Members">
            <summary>
            组员
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.User.Username">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.User.CreatorName">
            <summary>
            创建者名字
            </summary>
        </member>
        <member name="P:XactTodo.Api.Queries.User.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="M:XactTodo.Api.Startup.RegisterServiceTypes(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            自动注册Domain项目中的所有Service类
            </summary>
        </member>
        <member name="M:XactTodo.Api.Startup.RegisterQueries(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            自动注册Domain项目中的所有实现IQueries接口的类
            </summary>
        </member>
        <member name="M:XactTodo.Api.Startup.RegisterRepositoryTypes(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            自动注册Domain项目中的所有仓储类
            </summary>
        </member>
        <member name="T:XactTodo.Api.Utils.EmailHelper">
            <summary>
            邮件发送辅助类
            </summary>
        </member>
        <member name="M:XactTodo.Api.Utils.EmailHelper.SendMailAsync(System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            发送电子邮件
            </summary>
            <param name="smtpHost">SMTP服务器</param>
            <param name="enableSsl">是否启用SSL加密</param>
            <param name="userName">登录帐号</param>
            <param name="pwd">登录密码</param>
            <param name="recipientName">发件人昵称</param>
            <param name="senderMailbox">发件人</param>
            <param name="recipientMailbox">收件人</param>
            <param name="subject">主题</param>
            <param name="body">正文</param>
        </member>
        <member name="T:XactTodo.Api.Utils.ExceptionHelper">
            <summary>
            异常处理辅助类
            </summary>
        </member>
        <member name="M:XactTodo.Api.Utils.ExceptionHelper.AllMessages(System.Exception)">
            <summary>
            遍历Exception.InnerException,获取全部异常消息。
            </summary>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="T:XactTodo.Api.Utils.JsonErrorResponse">
            <summary>
            错误响应
            </summary>
        </member>
        <member name="P:XactTodo.Api.Utils.JsonErrorResponse.Message">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="P:XactTodo.Api.Utils.JsonErrorResponse.DevelopmentMessage">
            <summary>
            开发环境的消息
            </summary>
        </member>
        <member name="M:XactTodo.Api.Utils.JsonErrorResponse.#ctor">
            <summary>
            缺省构造函数
            </summary>
        </member>
        <member name="M:XactTodo.Api.Utils.JsonErrorResponse.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="T:XactTodo.Api.Utils.ValueTextPair`1">
            <summary>
            值-文本对
            </summary>
        </member>
        <member name="M:XactTodo.Api.Utils.ValueTextPair`1.#ctor(`0,System.String)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:XactTodo.Api.Utils.ValueTextPair`1.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:XactTodo.Api.Utils.ValueTextPair`1.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="M:XactTodo.Api.Utils.ValueTextPair`1.ToString">
            <summary>
            
            </summary>
        </member>
        <member name="T:Csci.EasyInventory.WebApi.Controllers.AuthenticationController">
            <summary>
            用户认证
            </summary>
        </member>
        <member name="M:Csci.EasyInventory.WebApi.Controllers.AuthenticationController.Login(XactTodo.Api.DTO.LoginInput)">
            <summary>
            用户登录
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Csci.EasyInventory.WebApi.Controllers.AuthenticationController.Logout">
            <summary>
            登出
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csci.EasyInventory.WebApi.Controllers.AuthenticationController.Refresh(System.String)">
            <summary>
            请求刷新令牌
            </summary>
            <param name="token">刷新令牌</param>
            <returns></returns>
        </member>
        <member name="M:Csci.EasyInventory.WebApi.Controllers.AuthenticationController.Validate(System.String)">
            <summary>
            验证令牌是否有效，有效则返回登录信息
            </summary>
            <param name="token">访问令牌</param>
            <returns></returns>
        </member>
    </members>
</doc>
